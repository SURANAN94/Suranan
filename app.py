
import io
import pandas as pd
import streamlit as st

st.set_page_config(page_title="Excel VLOOKUP Tool", page_icon="üìä", layout="centered")

st.title("üìä Excel VLOOKUP Tool")

st.markdown(
    """
    ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î **F1** (‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏Å) ‡πÅ‡∏•‡∏∞ **F2** (‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö)
    ‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏à‡∏∞‡∏à‡∏±‡∏ö‡∏Ñ‡∏π‡πà‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô‡πÉ‡∏ô‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏Ñ‡∏µ‡∏¢‡πå (‡πÄ‡∏ä‡πà‡∏ô `PID`) ‡πÅ‡∏•‡πâ‡∏ß‡∏î‡∏∂‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏≤‡∏Å F2 ‡∏°‡∏≤‡∏ï‡πà‡∏≠‡πÉ‡∏ô F1
    """
)

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå Excel
def read_excel(file):
    try:
        sheets = pd.read_excel(file, sheet_name=None)
        if isinstance(sheets, dict):
            df = pd.concat(sheets.values(), ignore_index=True)
        else:
            df = sheets
        return df
    except Exception as e:
        st.error(f"‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå: {e}")
        return pd.DataFrame()

f1_file = st.file_uploader("üì§ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î F1 (‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏Å)", type=["xlsx", "xls"], key="f1")
f2_file = st.file_uploader("üì§ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î F2 (‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á)", type=["xlsx", "xls"], key="f2")

if f1_file and f2_file:
    df1 = read_excel(f1_file)
    df2 = read_excel(f2_file)

    if df1.empty or df2.empty:
        st.stop()

    st.subheader("üîß ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏ö‡∏Ñ‡∏π‡πà")
    pid_col1 = st.selectbox("‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏Ñ‡∏µ‡∏¢‡πå‡πÉ‡∏ô F1", df1.columns.tolist(), index=df1.columns.tolist().index("PID") if "PID" in df1.columns else 0)
    pid_col2 = st.selectbox("‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏Ñ‡∏µ‡∏¢‡πå‡πÉ‡∏ô F2", df2.columns.tolist(), index=df2.columns.tolist().index("PID") if "PID" in df2.columns else 0)
    result_col = st.selectbox("‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏à‡∏≤‡∏Å F2", [c for c in df2.columns if c != pid_col2])

    if st.button("üîÑ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î"):
        merged = df1.merge(df2[[pid_col2, result_col]], left_on=pid_col1, right_on=pid_col2, how="left")
        merged.rename(columns={result_col: f"{result_col}_lookup"}, inplace=True)

        buffer = io.BytesIO()
        with pd.ExcelWriter(buffer, engine="openpyxl") as writer:
            merged.to_excel(writer, index=False, sheet_name="Result")

        st.success("‡πÄ‡∏™‡∏£‡πá‡∏à‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢! ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢ ‚Üì")
        st.download_button(
            label="üì• ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå",
            data=buffer.getvalue(),
            file_name="vlookup_result.xlsx",
            mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
        )

    with st.expander("üîç ‡∏î‡∏π‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á F1"):
        st.dataframe(df1.head())

    with st.expander("üîç ‡∏î‡∏π‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á F2"):
        st.dataframe(df2.head())

else:
    st.info("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏≠‡∏á‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô")
